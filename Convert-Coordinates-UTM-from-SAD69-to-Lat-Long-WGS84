let

/*Fórmula para converter coordenadas UTM/SAD69 para Geográficas WGS84
Desenvolvido por: José Carlos Fortunato - fortunatojosecarlos@gmail.com*/

    UtmLatLongSAD69toWGS84 = (UTMeste as number,UTMnorte as number,Hemisferio as text,MeridianoCentral as number) =>
        let
        long0 = MeridianoCentral,
        Hem = Hemisferio,
        TextHem = Text.Upper(Hem),
        a = 6378160.0000,
        b = 6356774.7000,
        x = 500000 - UTMeste,
        y = UTMnorte,

        y1 = if TextHem = "S" or TextHem = "SOUTH" or TextHem = "SUL" then
        10000000 - y
        else y,

        M = y1 / 0.9996,
        e = Number.Sqrt(1 - Number.Power(b,2) / Number.Power(a,2)),
        mu = M / (a * (1 - Number.Power(e,2) / 4 - 3 * Number.Power(e,4) / 64 - 5 * Number.Power(e,6) / 256)),
        e1 = (1 - Number.Power((1 - Number.Power(e,2)),(1 / 2))) / (1 + Number.Power((1 - Number.Power(e,2)),(1 / 2))),

        j1 = (3 * e1 / 2 - 27 * Number.Power(e1,3) / 32),
        j2 = (21 * Number.Power(e1,2) / 16 - 55 * Number.Power(e1,4) / 32),
        j3 = (151 * Number.Power(e1,3) / 96),
        j4 = (1097 * Number.Power(e1,4) / 512),

        fp = mu + j1 * Number.Sin(2 * mu) + j2 * Number.Sin(4 * mu) + j3 * Number.Sin(6 * mu) + j4 * Number.Sin(8 * mu),

        e2 = Number.Power(e,2) / (1 - Number.Power(e,2)),
        c1 = e2 * Number.Power((Number.Cos(fp)),2),
        t1 = Number.Power(((Number.Sin(fp)) / (Number.Cos(fp))),2),
        r1 = a * (1 - Number.Power(e,2)) / Number.Power((1 - Number.Power(e,2) * Number.Power((Number.Sin(fp)),2)),(3 / 2)),
        n1 = a / Number.Power((1 - Number.Power(e,2) * Number.Power((Number.Sin(fp)),2)),(1 / 2)),
        d = x / (n1 * 0.9996),

        q1 = n1 * ((Number.Sin(fp)) / (Number.Cos(fp))) / r1,
        q2 = Number.Power(d,2) / 2,
        q3 = (5 + 3 * t1 + 10 * c1 - 4 * Number.Power(c1,2) - 9 * e2) * Number.Power(d,4) / 24,
        q4 = (61 + 90 * t1 + 298 * c1 + 45 * Number.Power(t1,2) - 3 * Number.Power(c1,2) - 252 * e2) * Number.Power(d,6) / 720,

        latrad = fp - q1 * (q2 - q3 + q4),

        lat = if TextHem = "S" or TextHem = "SOUTH" or TextHem = "SUL" then
            -1 * (latrad * (180 / Number.PI))
        else
            (latrad * (180 / Number.PI)),


        q5 = d,
        q6 = (1 + 2 * t1 + c1) * Number.Power(d,3) / 6,
        q7 = (5 - 2 * c1 + 28 * t1 - 3 * Number.Power(c1,2) + 8 * e2 + 24 * Number.Power(t1,2)) * Number.Power(d,5) / 120,

        longrad1 = (q5 - q6 + q7) / (Number.Cos(fp)),
        longrad2 = longrad1 * (180 / Number.PI),

        longi = if long0 < 0 then
            long0 - longrad2
        else
            long0 + longrad2,

        //SAD69 to WGS84
        a1 = 6378160.0000,
        a2 = 6378137.0000,
        f1 = 0.0033528949,
        f2 = 0.0033528107,
        dx = -66.870,
        dy = 4.370,
        dz = -38.520,

        lat1 = lat * Number.PI / 180,
        longi1 = longi * Number.PI / 180,

        da = a2 - a1,
        df = f2 - f1,

        e1b = f1 * (2 - f1),
        e2b = e1b / (1 - e1b),

        n1b = a1 / Number.Power(1 - e1b * Number.Power((Number.Sin(lat1)),2),(1 / 2)),
        m1 = n1b / Number.Power(1 + e2b * (Number.Cos(lat1)) , 2),

        dlat = 1 / m1 * ((a1 * df + f1 * da) * Number.Sin(2 * lat1) - dx * Number.Sin(lat1) * Number.Cos(longi1) - dy * Number.Sin(lat1) * Number.Sin(longi1) + dz * Number.Cos(lat1)) * 180 / Number.PI,
        dlongi = 1 / (n1b * Number.Cos(lat1)) * (-dx * Number.Sin(longi1) + dy * Number.Cos(longi1)) * 180 / Number.PI,

        lat2 = lat + dlat,
        longi2 = longi + dlongi

        in
        Table.FromRecords({[latWGS84 = lat2,longWGS84 = longi2]})
in
    UtmLatLongSAD69toWGS84
